---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  clusterIP: None  # This makes it a headless service
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secrets
type: Opaque
data:
  username: bXl1c2Vy  # base64 encoded 'myuser'
  password: bXlwYXNzd29yZA==  # base64 encoded 'mypassword'
  replication-user: cmVwbGljYXRvcg==  # base64 encoded 'replicator'
  replication-password: cmVwbGljYXRvcl9wYXNzd29yZA==  # base64 encoded 'replicator_password'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
spec:
  serviceName: postgresql
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: bitnami/postgresql:14.10.0
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_USER
              value: myuser
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_DB
              value: mydatabase
            # Replication Configuration
            - name: POSTGRESQL_REPLICATION_MODE  # This will be overwritten by command
              value: master
            - name: POSTGRESQL_REPLICATION_USER
              value: replicator
            - name: POSTGRESQL_REPLICATION_PASSWORD
              value: replicator_password
            # Additional required settings
            - name: POSTGRESQL_PASSWORD
              value: mypassword
            - name: POSTGRESQL_USERNAME
              value: myuser
            - name: POSTGRESQL_DATABASE
              value: mydatabase
          command:
            - sh
            - -ec
            - |
              ORDINAL=$(echo ${HOSTNAME} | awk -F'-' '{print $NF}')
              if [ "$ORDINAL" = "0" ]; then
                echo "Starting as master"
                export POSTGRESQL_REPLICATION_MODE=master
                export POSTGRESQL_REPLICATION_USER=replicator
                export POSTGRESQL_REPLICATION_PASSWORD=replicator_password
              else
                echo "Starting as replica"
                export POSTGRESQL_REPLICATION_MODE=slave
                export POSTGRESQL_MASTER_HOST=postgresql-0.postgresql
                export POSTGRESQL_MASTER_PORT_NUMBER=5432
                until pg_isready -h postgresql-0.postgresql -U replicator -d mydatabase --timeout=2; do
                  echo "Waiting for master at postgresql-0.postgresql:5432"
                  sleep 2
                done
              fi
              exec /opt/bitnami/scripts/postgresql/entrypoint.sh /opt/bitnami/scripts/postgresql/run.sh
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
