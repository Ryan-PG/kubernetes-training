apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: kuberise
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "<html><body><h1>Hello from Pod: ${HOSTNAME}</h1></body></html>" > /usr/share/nginx/html/index.html &&
          nginx -g "daemon off;"
      volumes:
      - name: html-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-deployment
  namespace: kuberise
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-deployment
  namespace: kuberise
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx-external
  rules:
  - host: nginx.onprem.kuberise.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-deployment
            port:
              number: 80

# https://nginx.onprem.kuberise.dev/
#
# To create the deployment from the file:
# kubectl apply -f 03.deployment.yaml
#
# To create a deployment imperatively:
# kubectl create deployment nginx-deployment --image=nginx:latest --replicas=3
#
# To scale a deployment:
# kubectl scale deployment nginx-deployment --replicas=5
#
# To update the image:
# kubectl set image deployment/nginx-deployment nginx=nginx:1.19
#
# To rollback to previous version:
# kubectl rollout undo deployment/nginx-deployment
#
# To check rollout status:
# kubectl rollout status deployment/nginx-deployment
#
# To view rollout history:
# kubectl rollout history deployment/nginx-deployment
#
# To get deployment details:
# kubectl describe deployment nginx-deployment
#
# To delete the deployment:
# kubectl delete deployment nginx-deployment
#
# To get deployment status:
# kubectl get deployment nginx-deployment -o wide
#
# Pod names are generated by the deployment controller which appends a hash to the pod name.
